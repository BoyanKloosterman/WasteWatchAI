@page "/register"
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop

<h3>Register</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleRegister" FormName="RegisterForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" type="password" />
    </div>
    <div>
        <label>Confirm Password:</label>
        <InputText @bind-Value="registerModel.ConfirmPassword" type="password" />
    </div>
    <button type="submit">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="text-danger">@errorMessage</div>
}

@code {
    private RegisterModel registerModel = new();
    private string? errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = null;
        var response = await Http.PostAsJsonAsync("https://localhost:8080/account/register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            errorMessage = "Registration failed. Please try again.";
        }
    }

    public class RegisterModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}
