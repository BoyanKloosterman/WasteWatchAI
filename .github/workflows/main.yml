name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---- FASTAPI (Python) ----
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Fixed: Added quotes around version
          
      - name: Install FastAPI dependencies
        working-directory: ./WasteWatchAIFastApi
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run FastAPI tests
        working-directory: ./WasteWatchAIFastApi
        run: |
          if [ -f "test_main.py" ]; then
            pip install pytest pytest-asyncio httpx
            python test_main.py
          elif [ -d "tests" ] && [ "$(ls -A tests)" ]; then
            pip install pytest pytest-asyncio httpx
            python -m pytest tests/ -v
          else
            echo "No test files found. Skipping FastAPI tests."
          fi

      # ---- .NET Core API ----
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'  # Added quotes for consistency
          
      - name: Restore .NET dependencies
        working-directory: ./WasteWatchAIBackend
        run: dotnet restore
        
      - name: Build .NET API
        working-directory: ./WasteWatchAIBackend
        run: dotnet build --configuration Release --no-restore
        
      - name: Test .NET API
        working-directory: ./WasteWatchAIBackend
        run: |
          # Check for test projects in parent directory too
          if find ../WasteWatchAIBackend.Tests -name "*.csproj" 2>/dev/null | grep -q .; then
            echo "Found test project in WasteWatchAIBackend.Tests"
            cd ../WasteWatchAIBackend.Tests
            dotnet restore
            dotnet test --configuration Release
          elif find . -name "*.Tests.csproj" -o -name "*Test*.csproj" -o -name "*Tests*.csproj" | grep -q .; then
            dotnet test --configuration Release --no-build
          else
            echo "No test projects found. Skipping .NET tests."
          fi

      # ---- BLAZOR Frontend ----
      - name: Restore Blazor dependencies
        working-directory: ./WasteWatchAIFrontend
        run: dotnet restore
        
      - name: Build Blazor
        working-directory: ./WasteWatchAIFrontend
        run: dotnet build --configuration Release --no-restore

              # ---- DOCKER BUILDS ----
      - name: Build Docker images
        run: |
          # Build FastAPI
          docker build -t wastewatchai-fastapi ./WasteWatchAIFastApi
          
          # Build .NET Backend
          docker build -t wastewatchai-backend ./WasteWatchAIBackend
          
          # Build Mock API
          docker build

      - name: Integration tests
        run: |
          # Start mock API for testing
          cd ./WasteWatchAIBackend/mock-api
          npm install
          npm start &
          MOCK_PID=$!
          
          # Wait for service to start
          sleep 10
          
          # Run integration tests
          cd ../../WasteWatchAIFastApi
          python test_main.py
          
          # Cleanup
          kill $MOCK_PID || true
