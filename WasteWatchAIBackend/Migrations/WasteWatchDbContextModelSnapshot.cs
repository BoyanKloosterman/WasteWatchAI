// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WasteWatchAIBackend.Data;

#nullable disable

namespace WasteWatchAIBackend.Migrations
{
    [DbContext(typeof(WasteWatchDbContext))]
    partial class WasteWatchDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WasteWatchAIBackend.Models.PredictionResult", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("FeatureLocationType")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<float>("FeatureTemp")
                    .HasColumnType("real");

                b.Property<string>("FeatureWeather")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<float>("Latitude")
                    .HasColumnType("real");

                b.Property<float>("Longitude")
                    .HasColumnType("real");

                b.Property<string>("Prediction")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Timestamp")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("PredictionResults");
            });

            modelBuilder.Entity("WasteWatchAIBackend.Models.TrashItem", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<float>("Latitude")
                    .HasColumnType("real");

                b.Property<string>("LitterType")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<float>("Longitude")
                    .HasColumnType("real");

                b.Property<DateTime>("Timestamp")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("TrashItems");
            });

            modelBuilder.Entity("WasteWatchAIBackend.Model.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("temperatuur")
                        .HasColumnType("real");

                    b.Property<string>("weerOmschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weather");
                });
#pragma warning restore 612, 618
        }
    }
}
